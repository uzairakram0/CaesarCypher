#ifndef CaesarCypher_hpp
#define CaesarCypher_hpp

//////////////////////////////////////////////////////////////////////////////
// INCLUDE FILES & NAMESPACES //
//////////////////////////////////////////////////////////////////////////////
#include <string>

//////////////////////////////////////////////////////////////////////////////
// Class CaesarCypher //
//////////////////////////////////////////////////////////////////////////////
class CaesarCypher {
public:
    //////////////////////////////////////////////////////////////////////////
    //Public Functions
    //////////////////////////////////////////////////////////////////////////

    //////////////////////////////////////////////////////////////////////////
    //Constructors & Destructors
    CaesarCypher() = delete;
    CaesarCypher(int const& newKey);
    ~CaesarCypher() = default;
    
    //////////////////////////////////////////////////////////////////////////
    std::string encrypt(std::string const& clearText);

    //////////////////////////////////////////////////////////////////////////
    std::string decrypt(std::string const& cypherText);
    
private:
    //////////////////////////////////////////////////////////////////////////
    //Private DATA
    //////////////////////////////////////////////////////////////////////////
    int const _key;

    //////////////////////////////////////////////////////////////////////////
    //Private Functions
    //////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////
    //Decypts/Encrypts text using the stored key
    std::string cypher(std::string const& text, int const& key);
    //////////////////////////////////////////////////////////////////////////
    //Decypts/Encrypts text using the stored key
    int wrapAround(char const& c, int charCode);

};//END Class Ceaser Cipher

#endif